#######################################################################################################################################
; Edwardyeeks (edwardyeeks#6042) Decontaminator Purge Bucket & Nozzle Scrubber mod. Macros created by Hernsl (hernsl#8860)
; Modified - Simplified geometry (rail centre & left, right & bucket gap widths. Wipe only option added & opposite start finish 
#######################################################################################################################################
[gcode_macro clean_nozzle]

; vvvvvvvvvvvvvvvvvvvvvvvv UPDATE THESE vvvvvvvvvvvvvvvvvvvvvvvv
variable_brush_start:         195         ; Y start for brush wipe. Make wider than physical brush to allow filament clingon's to drop off    
variable_brush_sweep:         65          ; Width of brush wipe. As above
variable_brush_centre:        310         ; Y centre of brush for wipe
variable_brush_top:           1.0         ; Nozzle mm height for wipe
variable_bucket_mount:        228         ; Mount location (centre) of edwardygeeks bucket on rail    
variable_wipe_qty:            2           ; number of complete wipes
; ^^^^^^^^^^^^^^^^^^^^^^^^ UPDATE THESE ^^^^^^^^^^^^^^^^^^^^^^^^

; Macro constants
variable_purge_len:           60          ; mm to purge - purge more than necessary to account for ERCF and filament changes (15mm is normal)
variable_purge_spd:           480         ; mm/min speed to purge
variable_purge_ret:           2.0         ; retract mm after purge to reduce oozing.  Need to be careful as jams can occur if retracting too far
variable_ooze_dwell:          6           ; 50% wait after purging / retracting, 50% before last wipe for ooze
variable_clearance_z:         7           ; safe travel height when not wiping
variable_prep_spd_xy:         7000        ; *** N/A - set from my_variables motion_travel_speed for non wiping moves
variable_prep_spd_z:          1500        ; z travel speed 
variable_wipe_spd_xy:         6000        ; xy wipe speed
variable_bucket_pos:          1           ; purge bucket target - 0 left, 1 right (Gets set randomally in macro)            
variable_pcf_on:              1           ; override and set pcf to full to help cool filament after purge          

; Edwardyeeks purge bucket geometry for 300mm
variable_bucket_left_width:   30          ; Mirrored - righthand rail placement
variable_bucket_right_width:  55          ; Mirrored - righthand rail placement  
#variable_bucket_left_width:  55          ; Normal - lefthand rail placement
#variable_bucket_right_width: 30          ; Normal - lefthand rail placement   
variable_bucket_gap:          36    

gcode:
   SAVE_GCODE_STATE NAME=clean_nozzle     ; save gcode state 
   G90                                    ; Absolute positioning
   {% set purge = params.PURGE|default(1)|int %} ; enable conditional wipe without purage - default to full purge and wipe. Override with CLEAN_NOZZLE PURGE=0
   ; Randomise bin for purge - 0 left, 1 right
   SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(2) | random)}
   ; Set Z for travel
   G1 Z{brush_top + clearance_z} F{prep_spd_z}
         
   ; Position XY for purge. Calculate random bin starting point for purge
   G1 X{bucket_mount - ((bucket_gap + bucket_left_width) / 2) + ((bucket_gap + (bucket_left_width + bucket_right_width) / 2) * bucket_pos)} Y{brush_centre} F{printer["gcode_macro _MY_VARIABLES"].motion_travel_speed * 60}

   ; Doing a purge? Check and heat nozzle > min temp. Small retract after to minimise oozing. G4 dwell is in milliseconds so * 1000
   {% if purge == 1 %}
        {% if printer.extruder.temperature < printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp|int %}
            M118 CLEAN_NOZZLE Check/Wait for extruder to minimum temp {printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp|int}c
            M104 S{printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp|int} ; start heating & use TEMPERATURE_WAIT to avoid waiting for temp to stabilise 
            TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp|int-2}
         {% endif %}
         M83      ; relative mode
         ; fast then slow down last 30%
         G1 E{purge_len * 0.7} F{purge_spd}
         G1 E{purge_len * 0.2} F{purge_spd * 0.6}
         G1 E{purge_len * 0.1} F{purge_spd * 0.4}
         ;G1 E-{purge_ret} F{purge_spd * 5}
         G1 E-{purge_ret} F{purge_spd * 0.4} ; slow retract to hopefully reduce pressure in HF hotends

         {% if pcf_on == 1 %} ; use PCF to cool filament?
            {%set current_pcf = printer['fan'].speed | float %} ; save current PCF setting
            m106 S255                                           ; set PCF to FULL
         {% endif %}
  
         G4 P{ooze_dwell * 0.5 * 1000} ; wait 50%
         G92 E0   ; reset extruder
    {% endif %}
      
   ; Start wiping - lower nozzle into brush
   G1 Z{brush_top} F{prep_spd_z}
   
   ; Perform wipe. 
   ; Wipe direction based off bucket_pos for cool random scrubby routine.
   {% for wipes in range(1, (wipe_qty + 1)) %}
      G1 X{brush_start + (brush_sweep * (1 - bucket_pos))} F{wipe_spd_xy}
      G1 X{brush_start + (brush_sweep * bucket_pos)} F{wipe_spd_xy}
   {% endfor %}

   {% if purge == 1 %} ; wait final 50% for ooze 
      G4 P{ooze_dwell * 0.5 * 1000}
   {% endif %}
   G1 X{brush_start + (brush_sweep * (1 - bucket_pos))} F{wipe_spd_xy} ; always finish wipe opposite to start to avoid attactiing purge klingons
   
   ; Done
   G1 Z{brush_top + clearance_z} F{prep_spd_z}
   {% if pcf_on == 1 and purge == 1 %} ; restore PCF to orginal setting
      m106 S{current_pcf * 255}      
   {% endif %}
   
   ; Restore the gcode state
   RESTORE_GCODE_STATE NAME=clean_nozzle

