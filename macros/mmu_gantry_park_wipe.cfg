####################################################################
[gcode_macro _MMU_USER_GANTRY_PARK]
####################################################################
gcode:
    {% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}
    {% if "xy" not in printer.toolhead.homed_axes %}
       { action_raise_error("You must home XY axis first") }
    {% else %}
       M400
       SAVE_GCODE_STATE NAME=_MMU_USER_PARK

; *** TODO *** check if we are already parked & bypass (need location from config)


       SET_VELOCITY_LIMIT ACCEL=10000 MINIMUM_CRUISE_RATIO=0.1 ; go fast!
       {% set speed = 400|int %};
       G90 

       {% if printer.gcode_move.gcode_position.z < 3 %}
         G1 Z3 F{50 * 60} ; min z_hop floor
       {% endif %} 
       
       {% if printer.gcode_move.gcode_position.x >= 105 and printer.gcode_move.gcode_position.x <= 182 and printer.gcode_move.gcode_position.y > 264 %}
         G1 X176 F{speed * 60}             ; move from behind wiper
       {% endif %}

       {% if printer.gcode_move.gcode_position.y > 302 %}
         G1 Y302 F{speed * 60}             ; move forward
       {% endif %}

       G1 X176 Y300 F{speed * 60}          ; right, just in front of gantry wiper
       G1 Y310 F{speed * 60}               ; right, in line with gantry wiper
       G1 X123.5 F{140 * 60}               ; wipe to park / nozzle rest 128.5
    
       SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} MINIMUM_CRUISE_RATIO={printer.toolhead.minimum_cruise_ratio}
       RESTORE_GCODE_STATE NAME=_MMU_USER_PARK
    {% endif %}
  
; Custom macro to wipen nozzle on the gantry brush after a tool change
[gcode_macro _MMU_USER_GANTRY_WIPE]

variable_brush_start:         165         ; X start position for brush wipe. Make wider than physical brush to allow filament clingon's to drop off    
variable_brush_park:          123.5 ; 128.50      ;
variable_brush_sweep:         38 ;35          ; Width of brush wipe. As above
variable_brush_y:             310
variable_wipe_qty:            2           ; number of complete wipes
variable_wipe_speed:          200         ; wipe speed


gcode:
    {% set odd_end = params.ODDEND|default(0)|int %}
    {% set wriggly_wipe = params.WRIGGLY_WIPE|default(0)|int %}

    {% if "xy" not in printer.toolhead.homed_axes %}
       { action_raise_error("You must home XY axis first") }
    {% else %}
       M400
       SAVE_GCODE_STATE NAME=_MMU_USER_GANTRY_WIPE
       SET_VELOCITY_LIMIT ACCEL=10000 MINIMUM_CRUISE_RATIO=0.1 ; go fast!

       ; park on gantry rest
       {% if (printer.gcode_move.gcode_position.y != 310) and (printer.gcode_move.gcode_position.x != brush_park) %}
          _MMU_USER_GANTRY_PARK                                
       {% endif %}    

       {% set orientation     = 0 %}
       {% set y_amp           = 3 %}  	
       {% set wipes           = 2 %}
       {% set skew_correction = 0.0 %} ; remove when rolled into blobifier
       m118 Custom wipe
       {% if wriggly_wipe == 1 %} 
         m118 wriggly wipe
         ; wipe in zigzag pattern away from start position for both x & y 

         G91 ; relative postioning
	 	   {% if skew_correction > 0 and printer.gcode_move.gcode_position.y == printer.toolhead.axis_maximum.y %} ; move away from max y if skew correction needed
           G1 Y-{skew_correction} F{wipe_speed * 60} ; offset from max y
         {% endif %}

         {% set zigzags = (brush_sweep / 5)|int %} ; number of complete 5mm zigs required
         {% for wipe in range(orientation, wipes * 2 + orientation + odd_end) %} ; wipe using orientation to set correct direction using range. Option to finish opposite start
            {% set direction = 1 if wipe % 2 == 0 else -1 %} ; Set direction for pass
		      {% for zigzag in range(zigzags) %} ; full zigzag sweep in desired direction, initially away from start position conditional on orientation  
	 		      G1 X{brush_sweep / (zigzags * 2) * direction} Y-{y_amp} F{wipe_speed * 60} ; zig away from max y
   		      G1 X{brush_sweep / (zigzags * 2) * direction} Y{y_amp}  F{wipe_speed * 60} ; zag back to max y
		      {% endfor %}
	      {% endfor %}
         G90 ; absolute positioning
      {% else %}
         m118 Normal wipe
         G90 ; absolute positioning - assume nothing
         {% for wipe in range(1, (wipes + 1)) %}
            G1 X{brush_start} F{wipe_speed * 60}
            G1 X{brush_start - brush_sweep} F{wipe_speed * 60}
         {% endfor %}
         G1 X{brush_park} F{400 * 60} ; reposition to park position 
         {% if odd_end <= 0 %} ; finish at other end
            G1 X{brush_start} F{wipe_speed * 60} 
         {% endif %}
      {% endif %}

       SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} MINIMUM_CRUISE_RATIO={printer.toolhead.minimum_cruise_ratio}
       RESTORE_GCODE_STATE NAME=_MMU_USER_GANTRY_WIPE
    {% endif %}


[gcode_macro _mytest]
gcode:

 
  {% set sweep    = 38 %}
  {% set start    = 165 %}
  {% set y_start  = 310 %}
  {% set y_amp    = 3 %}  	
  {% set zigzags  = (sweep / 4)|int %} ; minimum zag distance, point less any smaller
  {% set wipes    = 3 %}
  {% set orientation = 1 %}

  ;{% set max_y = [165 + sweep, printer.toolhead.axis_maximum.x - 3]|min %}
  m118 165->{start + sweep} in {zigzags} zigzags

  {% set path = [] %}
  {% for zigzag in range(zigzags) %}
     {% set y = [y_start + y_amp, printer.toolhead.axis_maximum.y]|min if zigzag % 2 == 0 else y_start - y_amp %}
     {% set x = start + zigzag * (sweep / zigzags) %}
     {% set path = path + [(x, y)] %}
  {% endfor %}
  {% set path = path + [(start + sweep, y_start)] %}
  m118 path  
  {% for point in path %}
     m118 G1 X{point[0]} Y{point[1]}
  {% endfor %}

;  {% set direction = -1 if orientation == 1 else 1 %}
 
;  {% for wipe in range(wipes) %}
;     m118 direction:{direction}
;     {% for zigzag in range(zigzags) %}
        ;{% set up = 1 if zigzag % 2 == 0 else 0 %}
;        {% set y = [y_start + y_amp, printer.toolhead.axis_maximum.y]|min if zigzag % 2 == 0 else y_start - y_amp %}
;        m118 x{start + (sweep * orientation) + direction * (zigzag * (sweep / zigzags))} y{y}
;     {% endfor %}

;     {% if direction == -1 %}
;        m118 x{start} y{y_start}
;     {% else %}
;        m118 x{start + sweep} y{y_start}
;     {% endif %} 
;     {% set direction = -1 if direction == 1 else 1 %}
;  {% endfor %}

;              {% for shakes in range(nozzle_shakes|int) %}
;                  G1 X{nozzle_shake_start + (nozzle_shake_sweep * (1 - orientation))} F{travel_spd_xy}
;                  G1 X{nozzle_shake_start + (nozzle_shake_sweep * orientation)} F{travel_spd_xy}
;              {% endfor %}
;              G1 X{purge_x} F{travel_spd_xy}

[gcode_macro mytest2]

gcode:
   {% set orientation = 1 %}
   {% set sweep       = 39 %}
   {% set zigzags     = (sweep / 4)|int %} ; minimum zag distance, point less any smaller
   {% set y_amp       = 3 %}  	
   {% set wipes       = 3  %}


;   m118 Sweep {sweep}mm in {zigzags * 2} zigzags = {zigzags} x {sweep / zigzags}mm steps

   m118 G91
   {% for wipe in range(orientation, wipes * 2 + orientation + 1) %}
      {% set direction = 1 if wipe % 2 == 0 else -1 %}
		{% for zigzag in range(zigzags) %} ; 
			m118 G1 X{sweep / (zigzags * 2) * direction} Y-{y_amp} F5000
			m118 G1 X{sweep / (zigzags * 2) * direction} Y{y_amp} F5000
		{% endfor %}
	{% endfor %}
   m118 G90
