[gcode_macro _WHEREAMI]
gcode:
  {% set macro = params.MACRO|default('Unknown Macro')|string %}
  M118 You are here...{macro}
  M118 X{printer.gcode_move.gcode_position.x},Y{printer.gcode_move.gcode_position.y}
  M118 Passed parameters
  M118 {rawparams}

[gcode_macro MMU_PARK]
gcode:
  _MMU_PARK force_park=1


####################################################################
[gcode_macro _BLOBIFER_WIPER]
####################################################################

variable_brush_start:         127         # X start position for brush wipe. Make wider than physical brush to allow filament clingon's to drop off    
variable_brush_park:          124 #
variable_brush_sweep:         38 #          # Width of brush wipe. As above
variable_brush_y:             310
variable_wipe_qty:            2           # number of complete wipes

gcode:

   _WHEREAMI macro=_BLOBIFER_WIPER {RAWPARAMS}

   {% set wriggly_wipe = params.WRIGGLY_WIPE|default(0)|int %}

   {% set odd_end = params.ODDEND|default(0)|int %}
   {% set wriggly_wipe = params.WRIGGLY_WIPE|default(0)|int %}

   {% if "xy" not in printer.toolhead.homed_axes %}
      { action_raise_error("You must home XY axis first") }
   {% else %}

      {% set bl = printer['gcode_macro BLOBIFIER'] %}

      M400
      SAVE_GCODE_STATE NAME=_MMU_USER_GANTRY_WIPE
      SET_VELOCITY_LIMIT ACCEL=10000 MINIMUM_CRUISE_RATIO=0.1 # go fast!

      _MMU_USER_GANTRY_PARK       

      {% set y_amp           = 3 %}  	
      {% set wipes           = 2 %}

      {% if bl.gantry_park_xy|sum > 0 %}
         {% set park_x, park_y = bl.gantry_park_xy|map('float') %}
         {% set wipe_x, wipe_y, wipe_w = bl.gantry_wipe_xyw|map('float') %}
         M118 Park Gantry
         G1 X{wipe_x} Y{wipe_y} F{bl.wipe_spd_xy * 60} # move to start of wipe                         
      {% endif %}

      m118 Custom wipe

      # _BLOBIFIER_WIPE ZIGZAG=1 SKEW=0.0 WIPE_SPD=200 WIPES=2 TRAVEL_SPD=600 ORIENTATION=1  

      {% if wriggly_wipe == 1 %} 
        m118 wriggly wipe
        # wipe in zigzag pattern away from start position for both x & y 

        G91 # relative postioning
        {% if bl.skew_correction > 0 and printer.gcode_move.gcode_position.y == printer.toolhead.axis_maximum.y %} # move away from max y if skew correction needed
           G1 Y-{bl.skew_correction} F{bl.wipe_spd_xy * 60} # offset from max y
        {% endif %}

        {% set zigzags = (brush_sweep / 5)|int %} # number of complete 5mm zigs required
        {% for wipe in range(bl.orientation, wipes * 2 + bl.orientation + odd_end) %} # wipe using orientation to set correct direction using range. Option to finish opposite start
           {% set direction = -1 if wipe % 2 == 0 else 1 %} # Set direction for pass
		     {% for zigzag in range(zigzags) %} # full zigzag sweep in desired direction, initially away from start position conditional on orientation  
	 		     G1 X{brush_sweep / (zigzags * 2) * direction} Y-{y_amp} F{bl.wipe_spd_xy * 60} # zig away from max y
   		     G1 X{brush_sweep / (zigzags * 2) * direction} Y{y_amp}  F{bl.wipe_spd_xy * 60} # zag back to max y
		     {% endfor %}
	      {% endfor %}
      {% else %}
         m118 Normal wipe
         G90 # absolute positioning - assume nothing
         {% for wipe in range(1, (wipes + 1)) %}
            G1 X{brush_start + (brush_sweep * bl.orientation)} F{bl.wipe_spd_xy * 60}
            G1 X{brush_start - (brush_sweep * (1 - bl.orientation))} F{bl.wipe_spd_xy * 60}
         {% endfor %}
         #{% if odd_end > 0 %} # finish at other end
         #   G1 X{brush_start} F{wipe_speed * 60} 
         #{% endif %}
      {% endif %}
      G90 # absolute positioning
      G1 X{park_x} Y{park_y} F{bl.travel_spd_xy * 60} # park up# 

       SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} MINIMUM_CRUISE_RATIO={printer.toolhead.minimum_cruise_ratio}
       RESTORE_GCODE_STATE NAME=_MMU_USER_GANTRY_WIPE
    {% endif %}



 
# Custom macro to wipen nozzle on the gantry brush after a tool change
[gcode_macro _MMU_USER_GANTRY_WIPE]

variable_brush_start:         127         # X start position for brush wipe. Make wider than physical brush to allow filament clingon's to drop off    
variable_brush_park:          124 #
variable_brush_sweep:         38 #          # Width of brush wipe. As above
variable_brush_y:             310
variable_wipe_qty:            2           # number of complete wipes

gcode:

   {% set auth = params.AUTH|default(0)|int %}
   M118 Macro AUTH code required: {printer.save_variables.variables.mmu__revision}

   {% if auth !=  printer.save_variables.variables.mmu__revision %} ; test to prevent macro from being run interactively
      {action_respond_info("BLOBIFIER: You cannot run this macro interactively")} 
   {% else %}
   
      _WHEREAMI macro=_MMU_USER_GANTRY_WIPE {RAWPARAMS}

      {% set odd_end = params.ODDEND|default(0)|int %}
      {% set wriggly_wipe = params.WRIGGLY_WIPE|default(0)|int %}

      {% if "xy" not in printer.toolhead.homed_axes %}
         { action_raise_error("You must home XY axis first") }
      {% else %}

         {% set bl = printer['gcode_macro BLOBIFIER'] %}

         M400
         SAVE_GCODE_STATE NAME=_MMU_USER_GANTRY_WIPE
         SET_VELOCITY_LIMIT ACCEL=10000 MINIMUM_CRUISE_RATIO=0.1 # go fast!

         _MMU_USER_GANTRY_PARK       

         {% set y_amp           = 3 %}  	
         {% set wipes           = 2 %}

         {% if bl.gantry_park_xy|sum > 0 %}
            {% set park_x, park_y = bl.gantry_park_xy|map('float') %}
            {% set wipe_x, wipe_y, wipe_w = bl.gantry_wipe_xyw|map('float') %}
            M118 Park Gantry
            G1 X{wipe_x} Y{wipe_y} F{bl.wipe_spd_xy * 60} # move to start of wipe                         
         {% endif %}

         m118 Custom wipe

         # _BLOBIFIER_WIPE ZIGZAG=1 SKEW=0.0 WIPE_SPD=200 WIPES=2 TRAVEL_SPD=600 ORIENTATION=1  

         {% if wriggly_wipe == 1 %} 
           m118 wriggly wipe
           # wipe in zigzag pattern away from start position for both x & y 

           G91 # relative postioning
           {% if bl.skew_correction > 0 and printer.gcode_move.gcode_position.y == printer.toolhead.axis_maximum.y %} # move away from max y if skew correction needed
              G1 Y-{bl.skew_correction} F{bl.wipe_spd_xy * 60} # offset from max y
           {% endif %}

           {% set zigzags = (brush_sweep / 5)|int %} # number of complete 5mm zigs required
           {% for wipe in range(bl.orientation, wipes * 2 + bl.orientation + odd_end) %} # wipe using orientation to set correct direction using range. Option to finish opposite start
              {% set direction = -1 if wipe % 2 == 0 else 1 %} # Set direction for pass
		        {% for zigzag in range(zigzags) %} # full zigzag sweep in desired direction, initially away from start position conditional on orientation  
	 		        G1 X{brush_sweep / (zigzags * 2) * direction} Y-{y_amp} F{bl.wipe_spd_xy * 60} # zig away from max y
   		        G1 X{brush_sweep / (zigzags * 2) * direction} Y{y_amp}  F{bl.wipe_spd_xy * 60} # zag back to max y
		        {% endfor %}
	         {% endfor %}
         {% else %}
            m118 Normal wipe
            G90 # absolute positioning - assume nothing
            {% for wipe in range(1, (wipes + 1)) %}
               G1 X{brush_start + (brush_sweep * bl.orientation)} F{bl.wipe_spd_xy * 60}
               G1 X{brush_start - (brush_sweep * (1 - bl.orientation))} F{bl.wipe_spd_xy * 60}
            {% endfor %}
            #{% if odd_end > 0 %} # finish at other end
            #   G1 X{brush_start} F{wipe_speed * 60} 
            #{% endif %}
         {% endif %}
         G90 # absolute positioning
         G1 X{park_x} Y{park_y} F{bl.travel_spd_xy * 60} # park up# 

         SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} MINIMUM_CRUISE_RATIO={printer.toolhead.minimum_cruise_ratio}
         RESTORE_GCODE_STATE NAME=_MMU_USER_GANTRY_WIPE
      {% endif %}
   {% endif %}



####################################################################
[gcode_macro _BLOBIFIER_WIPER] 
####################################################################

variable_brush_start:         127         # X start position for brush wipe. Make wider than physical brush to allow filament clingon's to drop off    
variable_brush_park:          124 #
variable_brush_sweep:         38 #          # Width of brush wipe. As above
variable_brush_y:             310
variable_wipe_qty:            2           # number of complete wipes

gcode:
   {% set bl                  = printer['gcode_macro BLOBIFIER'] %}     # blobifier user settings
   {% set auth                = params.AUTH|default(0)|int %}           # manual execution check             
   {% set park_x              = params.PARK_X|default(-1)|float %}      
   {% set park_y              = params.PARK_Y|default(-1)|float %}      
   {% set wipe_x              = params.WIPE_X|default(-1)|float %}       
   {% set wipe_y              = params.WIPE_Y|default(-1)|float %}      
   {% set wipe_w              = params.WIPE_W|default(-1)|float %}      
   {% set wipes               = params.WIPES|default(1)|int %}          # number of wipes
   {% set zigzag_wipe         = params.ZIGZAG_WIPE|default(0)|int %}    # zigzag or normal wipe action
   {% set zigzag_y_sweep      = 3 %}                                    # amplitude of zig zag peak
   {% set zigzag_x_segs       = 5 %}                                    # number of zigs for wiper width
      	
   _WHEREAMI macro=_BLOBIFIER_WIPER {RAWPARAMS}

   M118 Orientation={bl.orientation} Wipe Speed={bl.wipe_spd_xy} Travel Speed={bl.travel_spd_xy}
   
   {% set odd_end      = params.ODDEND|default(0)|int %}



   M118 Macro AUTH code required: {printer.save_variables.variables.mmu__revision}

   {% if auth !=  printer.save_variables.variables.mmu__revision %}  # prevent macro from being run interactively
      {action_respond_info("BLOBIFIER: You cannot run this macro interactively")} 
   {% else %}

      {% if "xy" not in printer.toolhead.homed_axes %}
         { action_raise_error("You must home XY axis first") }
      {% else %}

         M400
         SAVE_GCODE_STATE NAME=_MMU_USER_GANTRY_WIPE
         SET_VELOCITY_LIMIT ACCEL=10000 MINIMUM_CRUISE_RATIO=0.1 # go fast!

         _MMU_USER_GANTRY_PARK we are already in positon for the wipe       
         
         {% if wipe_x > 0 and wipe_y > 0 %}
            M118 Move to wipe start
            G1 X{wipe_x} Y{wipe_y} F{bl.wipe_spd_xy * 60} # move to start of wipe                         

         {% if zigzag_wipe == 1 %} # wipe in zigzag pattern away from start position for both x & y 
            m118 Zigzag wipe
            G91 # relative postioning
            {% if bl.skew_correction > 0 and printer.gcode_move.gcode_position.y == printer.toolhead.axis_maximum.y %} # move away from max y if skew correction needed
               G1 Y-{bl.skew_correction} F{bl.wipe_spd_xy * 60} # offset from max y
            {% endif %}

            {% set zigzags = (brush_sweep / 5)|int %} # number of complete 5mm zigs required
            {% for wipe in range(bl.orientation, wipes * 2 + bl.orientation + odd_end) %} # wipe using orientation to set correct direction using range. Option to finish opposite start
               {% set direction = -1 if wipe % 2 == 0 else 1 %} # Set direction for pass
		         {% for zigzag in range(zigzags) %} # full zigzag sweep in desired direction, initially away from start position conditional on orientation  
	 		         G1 X{brush_sweep / (zigzags * 2) * direction} Y-{zigzag_y_sweep} F{bl.wipe_spd_xy * 60} # zig away from max y
   		         G1 X{brush_sweep / (zigzags * 2) * direction} Y{zigzag_y_sweep}  F{bl.wipe_spd_xy * 60} # zag back to max y
		         {% endfor %}
	          {% endfor %}
         {% else %}
             m118 Normal wipe
             G90 # absolute positioning - assume nothing
             {% for wipe in range(1, (wipes + 1)) %}
                G1 X{brush_start + (brush_sweep * bl.orientation)} F{bl.wipe_spd_xy * 60}
                G1 X{brush_start - (brush_sweep * (1 - bl.orientation))} F{bl.wipe_spd_xy * 60}
             {% endfor %}
             #{% if odd_end > 0 %} # finish at other end
             #   G1 X{brush_start} F{wipe_speed * 60} 
             #{% endif %}
         {% endif %}
         
         G90 # absolute positioning
         G1 X{park_x} Y{park_y} F{bl.travel_spd_xy * 60} # park up 

         SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} MINIMUM_CRUISE_RATIO={printer.toolhead.minimum_cruise_ratio}
         RESTORE_GCODE_STATE NAME=_MMU_USER_GANTRY_WIPE
      {% endif %}
   {% endif %}


# mytest2 AUTH=35824 PARK_XY=1,2 WIPE_XYW=3,4,5

[gcode_macro mytest1]

gcode:
  {% set bl = printer['gcode_macro BLOBIFIER'] %}
  mytest2 AUTH={printer.save_variables.variables.mmu__revision} PARK_X={bl.gantry_park_xy[0]} PARK_Y={bl.gantry_park_xy[1]} WIPE_X={bl.gantry_wipe_xyw[0]} WIPE_Y={bl.gantry_wipe_xyw[1]} WIPE_W={bl.gantry_wipe_xyw[2]}

[gcode_macro mytest2]

gcode:
   {% set auth = params.AUTH|default(0)|int %}

   M118 Macro AUTH code required: {printer.save_variables.variables.mmu__revision}

   {% if auth !=  printer.save_variables.variables.mmu__revision %} ; simple test to prevent macro from being run interactively
      {action_respond_info("BLOBIFIER: You cannot run this macro interactively")} 
   {% else %}
      _WHEREAMI macro=_mytest2 {rawparams}

      {% set park_x             = params.PARK_X|default(-1)|float %}      #
      {% set park_y             = params.PARK_Y|default(-1)|float %}      #
      {% set wipe_x             = params.WIPE_X|default(-1)|float %}      #
      {% set wipe_y             = params.WIPE_Y|default(-1)|float %}      #
      {% set wipe_w             = params.WIPE_W|default(-1)|float %}      #

      M118 {park_x},{park_y} Wipe {wipe_x},{wipe_y}>{wipe_w} Orientation={printer['gcode_macro BLOBIFIER'].orientation} Wipe Speed={printer['gcode_macro BLOBIFIER'].wipe_spd_xy} Travel Speed={printer['gcode_macro BLOBIFIER'].travel_spd_xy}
 
      {% if park_x > 0 and park_y > 0 %}
         M118 Valid park
      {% endif %}
      {% if wipe_x > 0 and wipe_y > 0 and wipe_w > 0 %}
         M118 Valid wipe
      {% endif %}

   {% endif %}

    