####################################################################
[gcode_macro _PRINTPARK] ; 
####################################################################

gcode:
  {% set Z_HOP = params.Z_HOP|default(5)|float %}
  ; use purge bucket location to park up
  {% set x_park, y_park = printer["gcode_macro _MY_VARIABLES"].motion_park_position_xy|map('float') %}
  {% set z_safe = [printer.toolhead.position.z|float + Z_HOP, printer.toolhead.axis_maximum.z|float]|min %}  ; z-hop by argument or to maximum_z

  G90                                                           ; absolute positioning
  G1 Z{z_safe} F900                                             ; safe z-hop
  G0 X{x_park} Y{y_park} F{printer["gcode_macro _MY_VARIABLES"].motion_travel_speed * 60} ; go to park position

####################################################################
[gcode_macro PAUSE] ; print pause
####################################################################

rename_existing: BASE_PAUSE
gcode:
  {% if printer['pause_resume'].is_paused|int == 0 %}              ; check we are entering paused state
     SAVE_GCODE_STATE NAME=PAUSE_state
     BASE_PAUSE

     G92 E0                                                        ; zero the extruder
     G91                                                           ; relative positioning
     G1 E-{printer["gcode_macro _MY_VARIABLES"].print_ooze_retraction} F3600 ; retract a little
     _PRINTPARK Z_HOP=5                                            ; park up over purge bucket
  {% endif %}  

####################################################################
[gcode_macro RESUME] ; resume printing
####################################################################

rename_existing: BASE_RESUME
gcode:
  {% if printer['pause_resume'].is_paused|int == 1 %}              ; check we are already paused
     {% if printer["gcode_macro PRINT_START"].use_ercf|int == 1 and printer.ercf.is_paused|int == 1 %}
        M118 You can't resume the print without unlocking the ERCF first.
        M118 Run ERCF_UNLOCK and resolve any issue before resuming
     {% else %}
        RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={printer["gcode_macro _MY_VARIABLES"].motion_travel_speed} 
        BASE_RESUME
    {% endif %}
  {% endif %}

####################################################################
[gcode_macro CANCEL_PRINT] ; cancel the running print - From ERCF
####################################################################

rename_existing: BASE_CANCEL_PRINT
gcode:
  G92 E0                                                        ; zero the extruder
  G91                                                           ; relative positioning
  G1 E-{printer["gcode_macro _MY_VARIABLES"].print_ooze_retraction} F3600 ; retract a little
  _PRINTPARK Z_HOP=5                                            ; park up over purge bucket 

  TURN_OFF_HEATERS
  BED_MESH_CLEAR
  CLEAR_PAUSE
  BASE_CANCEL_PRINT
  _LOWERZCURRENT                                                ; revert to low power z state    
  _CASELIGHTS_DIM                                               ; dim case lights
  STATUS_READY                                                  ; set Stealth Burner LEDs to READY
  M107                                                          ; turn off part fan
  
  M117 Print Cancelled

  ####################################################################
[gcode_macro _mytest] ; print pause
####################################################################

gcode:
  M118 T{printer.ercf.tool} Load Status:{printer.ercf.filament}
;  m118 X Minimum:  {printer.toolhead.axis_minimum.x|float}
;  m118 X Maximum:  {printer.toolhead.axis_maximum.x|float}
;  m118 X Position: {printer.toolhead.position.x|float}
;  m118 Y Minimum:  {printer.toolhead.axis_minimum.y|float}
;  m118 Y Maximum:  {printer.toolhead.axis_maximum.y|float}
;  m118 Y Position: {printer.toolhead.position.y|float}
;  m118 Z Minimum:  {printer.toolhead.axis_minimum.z|float}
;  m118 Z Maximum:  {printer.toolhead.axis_maximum.z|float}
;  m118 Z Position: {printer.toolhead.position.z|float}
;  m118 ERCF Ref:   {printer.save_variables.variables.ercf_calib_ref|float}
;  m118 HE0 soak:   {printer["gcode_macro _MY_VARIABLES"].print_extruder_soak_temp_factor }
;  m118 HE0 cali:   S{(245 * printer["gcode_macro _MY_VARIABLES"].print_extruder_soak_temp_factor)|round(0)} 
;  {% set Px, Py = printer["gcode_macro _MY_VARIABLES"].motion_park_position_xy|map('float') %}
;  M118 x/y:        {Px}/{Py}
;  {% set z_safe = [printer.toolhead.position.z|float + 5, printer.toolhead.axis_maximum.z|float]|min %}
;  M118 safe z:     {z_safe}

