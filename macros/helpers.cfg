#####################################################################
[gcode_macro BACKUP] ; backup klipper config directory to GIT Hub
#####################################################################
; https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github

gcode:
  RUN_SHELL_COMMAND CMD=backup_cfg
    
[gcode_shell_command backup_cfg]

command: bash /home/pi/printer_data/config/scripts/mygitbackup.sh
timeout: 60
verbose: True

#####################################################################
;[gcode_shell_command plot_graph]
#####################################################################

;command: bash /home/pi/printer_data/config/scripts/plot_graphs.sh
;timeout: 300.0
;verbose: True

#####################################################################
[gcode_macro FOCUS] ; manual arducam focus option
#####################################################################

gcode:
  {% set focus = params.FOCUS|default(310)|int %}           ; default focus value
  RUN_SHELL_COMMAND CMD=myfocus PARAMS={focus}
    
[gcode_shell_command myfocus]

command: python3 /home/pi/printer_data/config/scripts/myfocus.py
timeout: 2
verbose: False

#####################################################################
[delayed_gcode _DEFAULT_FOCUS]
#####################################################################

initial_duration: 5.0
gcode:
    FOCUS
    
#####################################################################
[delayed_gcode _CLEARLCD] 
; tidy up and clear M117 LCD display message line after n-seconds
; use: insert after M117 - UPDATE_DELAYED_GCODE ID=_CLEARLCD DURATION=4
#####################################################################
gcode:
  M117

#####################################################################
[gcode_macro DUMPVARS] ; dump all klipper variables to help in macros
#####################################################################

gcode:
  {% set filter_name =  params.NAME|default('')|string|lower %}
  {% set filter_value = params.VALUE|default('')|string|lower %}
  {% set show_cfg =     params.SHOW_CFG|default(0)|int %}
    
  {% set out = [] %}

  {% for key1 in printer %}
    {% for key2 in printer[key1] %}
       {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
          {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
       {% endif %}
    {% else %}
       {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
          {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
       {% endif %}
    {% endfor %}
  {% endfor %}
    
  {action_respond_info(out|join("\n"))}

#####################################################################
[gcode_macro SET_PA] 
#####################################################################

gcode: 

  {% set lookup_table = { 
    "ABS": { 
      "0.4": 0.038, 
      "0.6": 0.025 
    }, 
    "PETG": { 
      "0.4": 0.038, 
      "0.6": 0.025 
    }, 
    "PLA": { 
      "0.4": 0.038, 
      "0.6": 0.025 
    }, 
  } %} 

  {% set nozzle   = params.NOZZLE_DIAMETER %} 
  {% set material = params.MATERIAL_TYPE %} 

  {% if material in lookup_table and nozzle in lookup_table[material] %} 
    M118 SET_PRESSURE_ADVANCE ADVANCE={lookup_table[material][nozzle]} 
  {% else %} 
    M118 WARNING: No pressure advance setting found for {material}@{nozzle}mm 
  {% endif %} 

####################################################################
[gcode_macro CYCLE_MMU] 
#####################################################################

gcode:
   MMU_EJECT
   M83      ; relative mode
   {% for gate in range(0, 8) %}
      T{gate}
      G4 P1000
      G1 E60 F600
   {% endfor %}
   MMU_EJECT

####################################################################
[gcode_macro MMU_LOAD_CYCLE] 
#####################################################################

gcode:
   {% set loops =  params.LOOPS|default(2)|int %}
   {% set length =  params.LENGTH|default(1000)|int %}

   G90
   MMU_EJECT

   {% for test in range(1, loops + 1) %}
      M118 LOAD Iteration: {test} 
      MMU_TEST_LOAD LENGTH={length}
      MMU_EJECT
   {% endfor %}
