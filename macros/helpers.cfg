

;SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

#####################################################################
[gcode_macro BACKUP] ; backup klipper config directory to GIT Hub
#####################################################################
; https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github

gcode:
  RUN_SHELL_COMMAND CMD=backup_cfg
    
[gcode_shell_command backup_cfg]

command: bash /home/pi/printer_data/config/scripts/mygitbackup.sh
timeout: 60
verbose: True

#####################################################################
[gcode_macro FOCUS] ; manual arducam focus option
#####################################################################

gcode:
  {% set focus = params.FOCUS|default(310)|int %}           ; default focus value
  RUN_SHELL_COMMAND CMD=myfocus PARAMS={focus}
    
[gcode_shell_command myfocus]

command: python3 /home/pi/printer_data/config/scripts/myfocus.py
timeout: 2
verbose: False

#####################################################################
[delayed_gcode _DEFAULT_FOCUS] ; set default focal point
#####################################################################

initial_duration: 5.0
gcode:
    FOCUS
    
#####################################################################
[delayed_gcode _CLEARLCD] 
; tidy up and clear M117 LCD display message line after n-seconds
; use: insert after M117 - UPDATE_DELAYED_GCODE ID=_CLEARLCD DURATION=4
#####################################################################
gcode:
    M117

#####################################################################
[gcode_macro _DUMPVARS] ; dump all klipper variables to help in macros
#####################################################################

gcode:
  {% set filter_name =  params.NAME|default('')|string|lower %}
  {% set filter_value = params.VALUE|default('')|string|lower %}
  {% set show_cfg =     params.SHOW_CFG|default(0)|int %}
    
  {% set out = [] %}

  {% for key1 in printer %}
    {% for key2 in printer[key1] %}
       {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
          {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
       {% endif %}
    {% else %}
       {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
          {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
       {% endif %}
    {% endfor %}
  {% endfor %}
    
  {action_respond_info(out|join("\n"))}

####################################################################
[gcode_macro CYCLE_MMU] 
#####################################################################

gcode:
  {% if printer.mmu is defined and printer.mmu.enabled %}
    {% if printer.extruder.can_extrude == True %}
    MMU_EJECT
    M83      ; relative mode
    {% for gate in range(0, 8) %}
       T{gate}
       G4 P1000
       G1 E60 F600
    {% endfor %}
    MMU_EJECT
    {% else %}
       M118 WARNING: Hotend not heated so cant extrude - Aborted
    {% endif %}
  {% endif %}


####################################################################
[gcode_macro TEST_X] 
#####################################################################

gcode:
  {% set cycles = params.CYCLES|default(30)|int %}
  {% set speed = params.SPEED|default(600)|int %}

  G90                                                         ; set absolute mode to avoid positioning errors for poorly sliced stl's
  _CG28
  G0 Z100
  
    {% for reps in range(0, cycles) %}
      G0 X{printer.toolhead.axis_minimum.x+10} Y40 F{speed*60}
      G0 X{printer.toolhead.axis_maximum.x-10} Y40 F{speed*60}
    {% endfor %}
 
####################################################################
;[gcode_macro MYTEST] 
#####################################################################

;gcode:

;  M118 {printer.save_variables.variables.mmu_calibration_bowden_length}

;  {% set step = 0 %}
;  {% for step in range(10) %}
;    QUERY_ENDSTOPS
;    _Check_Trigger
;  {% endfor %}

;[gcode_macro _Check_Trigger]
;gcode:
;  {% if printer.query_endstops.last_query["x"] %}
;    RESPOND PREFIX="info" MSG="X Triggered"
;  {% else %}
;    RESPOND PREFIX="info" MSG="X Not Triggered"
;  {% endif %}